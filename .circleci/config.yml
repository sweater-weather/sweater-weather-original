version: 2
jobs:
  build:
    working_directory: ~/sweater_weather
    docker:
      - image: circleci/ruby:2.5.3-stretch-node-browsers
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_PATH: vendor/bundle
          BUNDLE_RETRY: 3
          BUNDLER_VERSION: 2.1.4
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
          PG_HOST: 127.0.0.1
          PGUSER: postgres
      - image: circleci/postgres:12.3
        environment:
          POSTGRES_DB: sweater_weather_test
          POSTGRES_USER: sweater_weather
          POSTGRES_PASSWORD: <%= ENV['SWEATER_WEATHER_DATABASE_PASSWORD'] %>
    steps:
      - checkout
      - restore_cache:
          keys:
            - sweater_weather-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - sweater_weather-
            - configure_bundler
      - run:
          name: Install Ruby Dependencies
          command: gem install bundler -v 2.1.4
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:5432 -timeout 1m
      - run:
          name: Setup DB
          command: bundle exec rake db:create db:schema:load --trace
      - save_cache:
          key: sweater_weather-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - persist_to_workspace:
          root: ~/
          paths:
            - ./sweater_weather
      - run: |-
          export RAILS_ENV="test"
          export RACK_ENV="test"
          bundle exec rake db:create db:schema:load ts:configure ts:index ts:start --trace
      - run: bundle exec rake db:migrate
      - run: bundle exec rspec spec
staging:
  machine: true
  working_directory: ~/sweater_weather
  steps:
    - checkout
    - run: |-
        cat >~/.netrc <<EOF
        machine api.heroku.com
          login $HEROKU_USERNAME
          password $HEROKU_PASSWORD
        machine git.heroku.com
          login $HEROKU_USERNAME
          password $HEROKU_PASSWORD
        EOF
    - run: chmod 600 ~/.netrc
    - run: heroku git:remote -a sweater_weather-staging
    - run: git push heroku staging:master
    - run: heroku run rake db:migrate --app sweater_weather-staging
workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build
      - staging:
          requires:
            - build
          filters:
            branches:
              only: staging
